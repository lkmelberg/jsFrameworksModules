{"ast":null,"code":"var _jsxFileName = \"/Users/linnmelberg/Desktop/School/Noroff/2ndYear/JS frameworks/modules/my-module-app/src/App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProductsList(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.map(props => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: [props.title, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), props.price, props.isOnSale]\n    }, props.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c = ProductsList;\nfunction App() {\n  const products = [{\n    id: 0,\n    title: \"Bread\",\n    price: 19.99,\n    isOnSale: true\n  }, {\n    id: 1,\n    title: \"Milk\",\n    price: 29.99,\n    isOnSale: false\n  }, {\n    id: 2,\n    title: \"Cheese\",\n    price: 35.99,\n    isOnSale: false\n  }, {\n    id: 3,\n    title: \"Water\",\n    price: 15.99,\n    isOnSale: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ProductsList(products)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\n\n// Level 1 process\n\n// The data for you to use is as follows.\n\n// const products = [\n//   { id: 0, title: 'Bread', price: 19.99, isOnSale: true },\n//   { id: 1, title: 'Milk', price: 29.99, isOnSale: false },\n//   { id: 2, title: 'Cheese', price: 35.99, isOnSale: false },\n//   { id: 3, title: 'Water', price: 15.99, isOnSale: true },\n// ];\n\n//     Loop through the above data in <App> or a new component. This choice is up to you.\n\n//     Display the title and price values.\n\n//     If the product isOnSale property is set to true, then display a div with “ON SALE” as the text. If the isOnSale property is set to false, do not display anything.\n\n//     You should now have all the products mapped out, but only the ones with isOnSale set to true will display the “ON SALE” text.\nvar _c, _c2;\n$RefreshReg$(_c, \"ProductsList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductsList","props","children","map","title","fileName","_jsxFileName","lineNumber","columnNumber","price","isOnSale","id","_c","App","products","_c2","$RefreshReg$"],"sources":["/Users/linnmelberg/Desktop/School/Noroff/2ndYear/JS frameworks/modules/my-module-app/src/App.js"],"sourcesContent":["import React from \"react\";\n\nfunction ProductsList(props) {\n  return (\n    <>\n      {props.map((props) => (\n        <li key={props.id}>\n          <b>{props.title}: </b>\n          {props.price}\n          {props.isOnSale}\n        </li>\n      ))}\n    </>\n  );\n}\n\nfunction App() {\n  const products = [\n    { id: 0, title: \"Bread\", price: 19.99, isOnSale: true },\n    { id: 1, title: \"Milk\", price: 29.99, isOnSale: false },\n    { id: 2, title: \"Cheese\", price: 35.99, isOnSale: false },\n    { id: 3, title: \"Water\", price: 15.99, isOnSale: true },\n  ];\n  return <div>{ProductsList(products)}</div>;\n}\n\nexport default App;\n\n// Level 1 process\n\n// The data for you to use is as follows.\n\n// const products = [\n//   { id: 0, title: 'Bread', price: 19.99, isOnSale: true },\n//   { id: 1, title: 'Milk', price: 29.99, isOnSale: false },\n//   { id: 2, title: 'Cheese', price: 35.99, isOnSale: false },\n//   { id: 3, title: 'Water', price: 15.99, isOnSale: true },\n// ];\n\n//     Loop through the above data in <App> or a new component. This choice is up to you.\n\n//     Display the title and price values.\n\n//     If the product isOnSale property is set to true, then display a div with “ON SALE” as the text. If the isOnSale property is set to false, do not display anything.\n\n//     You should now have all the products mapped out, but only the ones with isOnSale set to true will display the “ON SALE” text.\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,EACGD,KAAK,CAACE,GAAG,CAAEF,KAAK,iBACfJ,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,GAAID,KAAK,CAACG,KAAK,EAAC,IAAE;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACrBP,KAAK,CAACQ,KAAK,EACXR,KAAK,CAACS,QAAQ;IAAA,GAHRT,KAAK,CAACU,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACL;EAAC,gBACF,CAAC;AAEP;AAACI,EAAA,GAZQZ,YAAY;AAcrB,SAASa,GAAGA,CAAA,EAAG;EACb,MAAMC,QAAQ,GAAG,CACf;IAAEH,EAAE,EAAE,CAAC;IAAEP,KAAK,EAAE,OAAO;IAAEK,KAAK,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACvD;IAAEC,EAAE,EAAE,CAAC;IAAEP,KAAK,EAAE,MAAM;IAAEK,KAAK,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACvD;IAAEC,EAAE,EAAE,CAAC;IAAEP,KAAK,EAAE,QAAQ;IAAEK,KAAK,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACzD;IAAEC,EAAE,EAAE,CAAC;IAAEP,KAAK,EAAE,OAAO;IAAEK,KAAK,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAK,CAAC,CACxD;EACD,oBAAOb,OAAA;IAAAK,QAAA,EAAMF,YAAY,CAACc,QAAQ;EAAC;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5C;AAACO,GAAA,GARQF,GAAG;AAUZ,eAAeA,GAAG;;AAElB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}